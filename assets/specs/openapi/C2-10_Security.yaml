openapi: 3.1.0
info:
  title: Security & Audit API
  version: "0.1.0"
  description: Endpoints for SIEM ingest, incident handling, and transparency reports.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  x-c2-id: C2-10

servers:
  - url: https://api.coherosphere.io
    description: Production
  - url: https://staging.api.coherosphere.io
    description: Staging

tags:
  - name: health
    description: Health & readiness
  - name: siem
    description: SIEM ingest & queries
  - name: transparency
    description: Transparency & reports

security:
  - bearerAuth: []

paths:
  /security/health:
    get:
      tags: [health]
      summary: Health check
      responses:
        "200":
            description: OK
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Health"

  /security/siem/events:
    post:
      tags: [siem]
      summary: Ingest a SIEM event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SiemEvent"
      responses:
        "202":
          description: Accepted for processing

  /security/logs:
    get:
      tags: [siem]
      summary: Query normalized security logs
      parameters:
        - in: query
          name: since
          description: ISO8601 timestamp to start from
          schema: { type: string, format: date-time }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 1000 }
      responses:
        "200":
          description: Log entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogEntry"

  /security/transparency/reports:
    get:
      tags: [transparency]
      summary: List transparency reports
      responses:
        "200":
          description: Report list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransparencyReport"

  /security/transparency/reports/{id}:
    get:
      tags: [transparency]
      summary: Get a transparency report by ID
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        "200":
          description: Report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransparencyReport"
        "404":
          description: Not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Health:
      type: object
      properties:
        status: { type: string, enum: [ok] }

    LogEntry:
      type: object
      properties:
        ts: { type: string, format: date-time }
        level: { type: string, enum: [info, warn, error] }
        source: { type: string }
        message: { type: string }
      required: [ts, level, source, message]

    SiemEvent:
      type: object
      properties:
        id: { type: string }
        ts: { type: string, format: date-time }
        kind: { type: string }
        actor: { type: string }
        target: { type: string }
        data:
          type: object
          additionalProperties: true
      required: [id, ts, kind]

    TransparencyReport:
      type: object
      properties:
        id: { type: string }
        period:
          type: object
          properties:
            from: { type: string, format: date }
            to: { type: string, format: date }
        hash: { type: string }
        url: { type: string, format: uri }
      required: [id, period, hash]