%%{init: {'theme':'base','themeVariables':{ 'fontFamily':'Inter,Arial', 'primaryColor':'#ff8b00','lineColor':'#334155'}}}%%
flowchart LR
%%{init: {'theme':'base','themeVariables':{ 'fontFamily':'Inter,Arial', 'primaryColor':'#ff8b00','lineColor':'#334155'}}}%%
flowchart LR
  %% --- Coherosphere CI Theme ---
  classDef container fill:#111827,stroke:#111827,color:#ffffff,font-weight:bold;
  classDef compute fill:#ff8b00,stroke:#333333,color:#ffffff;
  classDef control fill:#fde68a,stroke:#b45309,color:#1f2937;
  classDef worker fill:#fb923c,stroke:#7c2d12,color:#1f2937;
  classDef event fill:#22c55e,stroke:#065f46,color:#083344;
  classDef risk fill:#ef4444,stroke:#7f1d1d,color:#ffffff;
  classDef store fill:#0ea5e9,stroke:#075985,color:#ffffff;
  classDef ext fill:#e5e7eb,stroke:#9ca3af,color:#111827;
  linkStyle default stroke:#334155,stroke-width:2px;

  %% ===== Container & Components (C2-01 → C3-01.xx) =====
  subgraph RS["C2-01 Resonance Service"]
    class RS container
    API["C3-01.01 API Controller"]:::control
    GUARD["C3-01.02 Schema & Policy Guard"]:::control
    CMD["C3-01.03 Command Handler"]:::control
    ENG["C3-01.04 Resonance Engine (R = I × A × e^(−λΔt))"]:::compute
    SUBL["C3-01.05 Sublinear Mapper (W = CP^α)"]:::compute
    ANOM["C3-01.06 Anomaly Detector"]:::risk
    RECOMP["C3-01.07 Recompute Worker (batch decay/snapshots)"]:::worker
    PUB["C3-01.08 Event Publisher"]:::event
    SNAP["Snapshot Store"]:::store
  end

  %% Internal flows
  API --> GUARD --> CMD --> ENG --> PUB
  ENG --> SUBL
  RECOMP --> ENG
  RECOMP --> SNAP
  ANOM -. flags .- ENG

  %% External references (context)
  PoC["C2-02 PoC Service"]:::ext --> API
  ETH["C2-08 Ethics Guard"]:::ext -. preflight .-> GUARD
  PUB --> MET["C2-07 Metrics / Analytics"]:::ext
