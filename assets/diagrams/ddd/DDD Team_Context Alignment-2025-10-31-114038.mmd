---
title: "DDD Strategic — Team ↔ Context Alignment (Conway / Team Topologies)"
config:
  layout: elk
---
flowchart LR
  %% ===== Styles =====
  classDef core fill:#ff8b00,stroke:#333,color:#fff,font-weight:bold;        %% Core subdomains
  classDef support fill:#fde68a,stroke:#b45309,color:#1f2937;                 %% Supporting subdomains
  classDef generic fill:#e5e7eb,stroke:#9ca3af,color:#111827;                 %% Generic/infrastructure subdomains
  classDef stream fill:#0ea5e9,stroke:#075985,color:#fff,font-weight:bold;    %% Stream-aligned team
  classDef platform fill:#8b5cf6,stroke:#4c1d95,color:#fff,font-weight:bold;  %% Platform team
  classDef enabling fill:#22c55e,stroke:#065f46,color:#083344,font-weight:bold;%% Enabling team
  classDef comp fill:#f59e0b,stroke:#7c2d12,color:#1f2937,font-weight:bold;   %% Complicated-subsystem team
  linkStyle default stroke:#334155,stroke-width:2px;

  %% ===== Teams (left) =====
  subgraph TEAMS["Teams"]
    direction TB
    T_GOV["Governance Team\n(type: Stream-aligned)"]:::stream
    T_RES["Resonance Core Team\n(type: Complicated-subsystem)"]:::comp
    T_POCID["PoC & Identity Team\n(type: Stream-aligned)"]:::stream
    T_TRE["Treasury Ops Team\n(type: Stream-aligned)"]:::stream
    T_HUB["Federation / Hubs Team\n(type: Stream-aligned)"]:::stream
    T_METKG["Metrics & Knowledge Team\n(type: Stream-aligned)"]:::stream
    T_SEC["Security & Audit Team\n(type: Enabling)"]:::enabling
    T_APIUI["API Gateway & UI Team\n(type: Platform)"]:::platform
    T_DEVOPS["DevOps / Platform Eng\n(type: Platform)"]:::platform
  end

  %% ===== Contexts (right) =====
  subgraph CONTEXTS["Bounded Contexts / Subdomains"]
    direction TB
    C_GOV["Governance & DAO"]:::core
    C_RES["Resonance"]:::core
    C_POC["Proof-of-Contribution"]:::core
    C_TRE["Treasury & Funding"]:::core
    C_ETH["Manifesto & Ethics Guard"]:::core

    C_ID["Identity & Reputation (PoCI)"]:::support
    C_HUB["Local Hub / Federation"]:::support
    C_MET["Metrics / Analytics"]:::support
    C_KG["Knowledge Graph / Collective Intelligence"]:::support

    C_API["Public API Gateway"]:::generic
    C_UI["Resonance Board / UI"]:::generic
    C_SEC["Security & Audit"]:::generic
    C_OPS["DevOps / Deployment Layer"]:::generic
  end

  %% ===== Primary Ownership (solid) =====
  T_GOV -->|Owns| C_GOV
  T_RES -->|Owns/Complicated| C_RES
  T_POCID -->|Owns| C_POC
  T_TRE -->|Owns| C_TRE
  T_HUB -->|Owns| C_HUB
  T_METKG -->|Owns| C_MET
  T_METKG -->|Owns| C_KG
  T_APIUI -->|Owns/Platform| C_API
  T_APIUI -->|Owns/Platform| C_UI
  T_SEC -->|Owns/Shared| C_SEC
  T_DEVOPS -->|Owns/Platform| C_OPS

  %% ===== Secondary Collaboration / Modes (dashed with labels) =====
  %% Team Topologies interaction modes: Collaboration, X-as-a-Service, Facilitating, Complicated-Subsystem
  T_GOV -. Collaboration .-> C_ETH
  T_GOV -. Collaboration .-> C_TRE
  T_POCID -. Collaboration .-> C_ID
  T_POCID -. Collaboration .-> C_ETH
  T_TRE -. Collaboration .-> C_SEC
  T_HUB -. Collaboration .-> C_ID
  T_HUB -. Collaboration .-> C_MET

  %% Platform consumption (XaaS)
  T_GOV -. XaaS .-> C_API
  T_POCID -. XaaS .-> C_API
  T_TRE -. XaaS .-> C_API
  T_HUB -. XaaS .-> C_API
  T_METKG -. XaaS .-> C_API
  T_RES -. XaaS .-> C_OPS
  T_TRE -. XaaS .-> C_OPS

  %% Enabling (Facilitating)
  T_SEC -. Facilitating .-> C_GOV
  T_SEC -. Facilitating .-> C_POC
  T_SEC -. Facilitating .-> C_TRE
  T_DEVOPS -. Facilitating .-> C_API
  T_DEVOPS -. Facilitating .-> C_UI
  T_DEVOPS -. Facilitating .-> C_RES

  %% Complicated subsystem support lines
  T_RES -. Support .-> C_MET
  T_RES -. Support .-> C_GOV