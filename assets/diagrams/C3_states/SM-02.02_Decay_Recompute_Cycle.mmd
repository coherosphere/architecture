%%{init: {'theme':'base','themeVariables':{ 'fontFamily':'Inter,Arial', 'primaryColor':'#ff8b00','lineColor':'#334155'}}}%%
stateDiagram-v2
%%{init: {'theme':'base','themeVariables':{ 'fontFamily':'Inter,Arial', 'primaryColor':'#ff8b00','lineColor':'#334155'}}}%%
stateDiagram-v2
%%{init: {'theme':'base','themeVariables':{ 'primaryColor':'#ff8b00','edgeLabelBackground':'#ffffff','tertiaryColor':'#fef3c7'}}}%%
stateDiagram-v2
title: SM-02.02 - Decay & Recompute Cycle (C2-02 Proof-of-Contribution)

[*] --> TRIGGER : CronTick / RecomputeRequested / ParamsVersioned
note right of TRIGGER
  Entry conditions:
  · Scheduled batch tick (CronTick)
  · Manual backfill (RecomputeRequested)
  · Parameters changed (ParamsVersioned: λ, α)
end note

TRIGGER --> LOAD_SNAPSHOT : Select ledger window
note right of LOAD_SNAPSHOT
  Load CPᵢ(t₀) snapshots and pending deltas
  Resolve idempotent ranges and gaps
end note

LOAD_SNAPSHOT --> CHECK_PARAMS : Bind constants (λ, α)
note right of CHECK_PARAMS
  λ = ln(2)/T  (half-life)
  α ∈ (0,1)    (sublinear voting)
  If new version → tag run with ParamVersionID
end note

CHECK_PARAMS --> APPLY_DECAY : InputBound
note right of APPLY_DECAY
  Apply time decay to each CPᵢ since t₀:
  CPᵢ(t) = CPᵢ(t₀) · e^(−λ·Δt) + Σ(ΔCPᵢ)
end note

APPLY_DECAY --> RECOMPUTE_W : DecayApplied (DDD EVT 21)
note right of RECOMPUTE_W
  Recompute voting weights:
  Wᵢ = (CPᵢ)^α
  Prepare diffs for persistence & metrics
end note

RECOMPUTE_W --> WRITE_BACK : WeightsComputed
note right of WRITE_BACK
  Persist CP/W snapshots + audit trail
  Mark run as deterministic (run-id, param-ver)
end note

WRITE_BACK --> EMIT_EVENTS : LedgerCommitted
note right of EMIT_EVENTS
  Emit CPUpdated / WeightsUpdated for Metrics (C2-07)
  Optionally trigger Resonance recompute (C2-01)
end note

EMIT_EVENTS --> [*] : RecomputeFinished (DDD EVT 22)

%% ---- Exceptional & maintenance paths ----
LOAD_SNAPSHOT --> RECONCILE : GapDetected / CorrectionInput
note right of RECONCILE
  Backfill missing windows, reconcile oracles
  (e.g., late hub data or corrections)
end note
RECONCILE --> APPLY_DECAY : Reconciled

APPLY_DECAY --> ABORT : InvariantBreach / AnomalyDetected
RECOMPUTE_W --> ABORT : InvariantBreach
ABORT --> [*] : RecomputeAborted

%% =========== Styling ===========
classDef core fill:#ff8b00,stroke:#333,color:#fff,font-weight:bold;
class TRIGGER,LOAD_SNAPSHOT,CHECK_PARAMS,APPLY_DECAY,RECOMPUTE_W,WRITE_BACK,EMIT_EVENTS,RECONCILE,ABORT core;
