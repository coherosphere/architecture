name: Validate Architecture – OpenAPI Syntax & Structure

on:
  workflow_dispatch: {}
  push:
    paths:
      - "assets/specs/openapi/**/*.yaml"
      - "assets/specs/openapi/**/*.yml"
      - ".github/workflows/validate-arch-openapi.yml"
  pull_request:
    paths:
      - "assets/specs/openapi/**/*.yaml"
      - "assets/specs/openapi/**/*.yml"
      - ".github/workflows/validate-arch-openapi.yml"

jobs:
  validate-openapi:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Show tool versions
        run: |
          npx -y @stoplight/spectral-cli@latest --version
          npx -y @redocly/cli@latest --version

      # Create a local Spectral ruleset so no remote path is needed
      - name: Create Spectral ruleset
        run: |
          cat > .spectral.yaml <<'YAML'
          extends:
            - "spectral:oas"
          rules:
            info-description: warn
            info-license: warn
          YAML

      # Redocly: syntax & structure
      - name: Redocly lint (syntax & structure)
        run: |
          npx -y @redocly/cli@latest lint "assets/specs/openapi/**/*.{yaml,yml}" --format stylish

      # Spectral: semantic rules with our local .spectral.yaml
      - name: Spectral lint (semantic validation)
        run: |
          npx -y @stoplight/spectral-cli@latest lint "assets/specs/openapi/**/*.{yaml,yml}" --fail-severity=error

      - name: Summarize
        if: always()
        run: |
          echo "✅ OpenAPI syntax & structure validation completed (Redocly + Spectral)." >> $GITHUB_STEP_SUMMARY
